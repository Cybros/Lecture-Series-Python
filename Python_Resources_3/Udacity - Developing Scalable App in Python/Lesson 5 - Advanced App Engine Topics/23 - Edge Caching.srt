0:00:00.210,0:00:02.950
Another heavy-duty topic which is good to know about

0:00:02.950,0:00:05.670
is edge caching. To describe this, let's look at

0:00:05.670,0:00:09.150
the information flow for your App Engine application. First

0:00:09.150,0:00:11.760
of all, users that want to use your application are

0:00:11.760,0:00:15.670
connected to their internet service provider. This provider connects

0:00:15.670,0:00:18.576
to Google data center. After the DNS lookup has

0:00:18.576,0:00:22.036
determined that your application is hosted by Google, Google

0:00:22.036,0:00:25.693
then identifies the data center where your App Engine application

0:00:25.693,0:00:28.304
run, and starts talking to the App Engine front

0:00:28.304,0:00:30.939
end. If the content is dynamic, the App Engine front

0:00:30.939,0:00:34.350
end determines the instance that should manage the request.

0:00:34.350,0:00:37.560
So these are your App Engine instances that run your

0:00:37.560,0:00:40.890
application code. But if the request is for static

0:00:40.890,0:00:44.880
content, for example images or static HTML, the front end

0:00:44.880,0:00:48.370
can retrieve it directly from the static servers. And in

0:00:48.370,0:00:51.960
both cases, the response is returned back to the user.

0:00:51.960,0:00:54.350
So this is a good architecture. But as it looks

0:00:54.350,0:00:57.000
right now, all the requests have to be sent to

0:00:57.000,0:01:00.230
the data center, which hosts your App Engine application. It

0:01:00.230,0:01:02.850
would be much better if more content could be served

0:01:02.850,0:01:06.160
directly by this data center. First of all, it would

0:01:06.160,0:01:09.640
ease the load on this data center, but more importantly,

0:01:09.640,0:01:12.340
since it's closer to the users, the response would be

0:01:12.340,0:01:16.150
delivered faster. This is exactly what edge caching is all about.

0:01:17.210,0:01:19.620
Edge caching is a cache that sits in the

0:01:19.620,0:01:22.840
data center closest to the user. So whenever there is

0:01:22.840,0:01:25.290
a request, the result can be served directly from

0:01:25.290,0:01:27.990
the cache if it's available there, rather than going through

0:01:27.990,0:01:31.220
data center 2. That means less load on data

0:01:31.220,0:01:34.700
center 2 in your application, and faster responses to your

0:01:34.700,0:01:38.650
users. A win-win. So the question is, then, what

0:01:38.650,0:01:41.070
do you need to think about to use edge caching?

0:01:42.230,0:01:45.100
Well, there are two ways. The first one is

0:01:45.100,0:01:49.070
to set the cache-control header, in the HTTP response. This

0:01:49.070,0:01:51.490
should only be done if a subsequent request of this

0:01:51.490,0:01:54.730
kind would return the same result. The second option is

0:01:54.730,0:01:58.010
to define as much content as possible as static.

0:01:58.010,0:02:00.900
Since static content does not change, it's great for edge

0:02:00.900,0:02:04.892
caching. You can define which content is static through configuration

0:02:04.892,0:02:07.356
files. A good opportunity for you to look at the

0:02:07.356,0:02:11.190
online documentation. And remember, as most of the time

0:02:11.190,0:02:14.180
with caching, there are no guarantees that the content will

0:02:14.180,0:02:16.340
be cached, but when it is, it will be

0:02:16.340,0:02:19.300
good for both your application as well as your users.
